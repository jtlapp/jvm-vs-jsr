apiVersion: apps/v1
kind: Deployment
metadata:
  name: client
spec:
  replicas: 1
  selector:
    matchLabels:
      app: client
  template:
    metadata:
      labels:
        app: client
    spec:
      nodeSelector:
        kubernetes.io/hostname: client

      containers:

        - name: client
          image: bench:latest
          imagePullPolicy: {{ .Values.global.app.imagePullPolicy }}
          env:
            - name: RESULTS_DATABASE_URL
              value: "postgresql://client-postgres-service:{{ .Values.global.client.database.port }}/{{ .Values.global.client.database.name }}"
            - name: RESULTS_DATABASE_USERNAME
              value: "{{ .Values.global.client.database.username }}"
            - name: RESULTS_DATABASE_PASSWORD
              value: "{{ .Values.global.client.database.password }}"
            - name: BASE_APP_URL
              value: "{{ .Values.global.app.baseUrl }}"
            - name: BACKEND_DATABASE_URL
              value: "{{ .Values.global.backend.pgbouncer.host }}"
            - name: BACKEND_DATABASE_USERNAME
              value: "{{ .Values.global.backend.database.username }}"
            - name: BACKEND_DATABASE_PASSWORD
              value: "{{ .Values.global.backend.database.password }}"

        - name: client-database
          image: postgres:15
          env:
            - name: POSTGRES_DB
              value: {{ .Values.global.client.database.name }}
            - name: POSTGRES_USER
              value: {{ .Values.global.client.database.username }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.global.client.database.password }}
          ports:
            - containerPort: {{ .Values.global.client.database.port }}
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data

      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: client-postgres-volume-claim

