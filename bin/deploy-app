#!/bin/bash
# Deploys an application container within the docker network

set -e

APP_NAME=$1

if [ -z "$APP_NAME" ]; then
  echo "Usage: $0 <app-name>"
  echo "Available apps:"
  echo "  - jooby-jdbc"
  echo "  - jooby-r2dbc"
  echo "  - jooby-vertx"
  echo "  - deno-fastify"
  echo "  - nodejs-fastify"
  echo "  - spring-jdbc-kernel"
  echo "  - spring-jdbc-virtual"
  echo "  - spring-webflux"
  echo "  - spring-webflux-kotlin"
  exit 1
fi

echo "Removing any existing app container..."

docker rm -f $APP_CONTAINER 2>/dev/null || true

echo "Deploying app $APP_NAME..."

IMAGE_NAME="$APP_NAME:latest"
ENV_VARS=()
PGBOUNCER_URL=postgresql://${PGBOUNCER_CONTAINER}:${PGBOUNCER_PORT}/${BACKEND_DB_NAME}

case "$APP_NAME" in
  spring-jdbc-kernel)
    IMAGE_NAME="spring-jdbc:latest"
    ENV_VARS=(
      "-e APP_NAME=$APP_NAME"
      "-e SERVER_PORT=$APP_PORT"
      "-e SPRING_DATASOURCE_URL=jdbc:$PGBOUNCER_URL"
      "-e SPRING_DATASOURCE_USERNAME=$BACKEND_DB_USER"
      "-e SPRING_DATASOURCE_PASSWORD=$BACKEND_DB_PASSWORD"
      "-e SPRING_THREADS_VIRTUAL_ENABLED=false"
    )
    ;;
  spring-jdbc-virtual)
    IMAGE_NAME="spring-jdbc:latest"
    ENV_VARS=(
      "-e APP_NAME=$APP_NAME"
      "-e SERVER_PORT=$APP_PORT"
      "-e SPRING_DATASOURCE_URL=jdbc:$PGBOUNCER_URL"
      "-e SPRING_DATASOURCE_USERNAME=$BACKEND_DB_USER"
      "-e SPRING_DATASOURCE_PASSWORD=$BACKEND_DB_PASSWORD"
      "-e SPRING_THREADS_VIRTUAL_ENABLED=true"
    )
    ;;
  spring-webflux|spring-webflux-kotlin)
    ENV_VARS=(
      "-e APP_NAME=$APP_NAME"
      "-e SERVER_PORT=$APP_PORT"
      "-e SPRING_R2DBC_URL=r2dbc:$PGBOUNCER_URL"
      "-e SPRING_R2DBC_USERNAME=$BACKEND_DB_USER"
      "-e SPRING_R2DBC_PASSWORD=$BACKEND_DB_PASSWORD"
    )
    ;;
  *)
    ENV_VARS=(
      "-e APP_NAME=$APP_NAME"
      "-e SERVER_PORT=$APP_PORT"
      "-e MAX_DB_CONNECTIONS=$MAX_DB_CONNECTIONS"
      "-e NUM_WORKERS=$NUM_JSR_WORKERS"
      "-e DATABASE_URL=$PGBOUNCER_URL"
      "-e DATABASE_HOST_NAME=$PGBOUNCER_CONTAINER"
      "-e DATABASE_PORT=$PGBOUNCER_PORT"
      "-e DATABASE_NAME=$BACKEND_DB_NAME"
      "-e DATABASE_USERNAME=$BACKEND_DB_USER"
      "-e DATABASE_PASSWORD=$BACKEND_DB_PASSWORD"
    )
    ;;
esac

docker run -d \
  --name $APP_CONTAINER \
  --network $DOCKER_NETWORK_NAME \
  -p ${APP_PORT}:${APP_PORT} \
  ${ENV_VARS[@]} \
  ${DOCKER_IMAGE_PREFIX}/${IMAGE_NAME}

echo "$APP_NAME successfully deployed"